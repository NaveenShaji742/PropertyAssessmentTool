{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectGeo\\\\PropertyAssessmentTool\\\\frontend\\\\src\\\\components\\\\HomePage.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AboutModal from \"./AboutModel\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  LayersControl,\r\n  LayerGroup, // ✅ Import this!\r\n} from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nfunction HomePage() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const mapRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSearch = () => {\r\n    if (search.trim()) navigate(`/map?query=${search}`);\r\n  };\r\n\r\n  const scrollToMap = () => {\r\n    if (mapRef.current) {\r\n      mapRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100\">\r\n      \r\n      <div className=\"h-screen flex flex-col items-center justify-center relative\">\r\n        <button\r\n          className=\"absolute top-4 right-4 px-4 py-2 bg-blue-600 text-white rounded\"\r\n          onClick={() => setShowModal(true)}\r\n        >\r\n          About Us\r\n        </button>\r\n\r\n        <img\r\n          src=\"/geojena.jpg\"\r\n          alt=\"GeoJena Logo\"\r\n          className=\"h-24 mb-6 object-contain\"\r\n        />\r\n\r\n        <div className=\"flex gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter District or State\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"px-4 py-2 border border-gray-300 rounded w-80\"\r\n          />\r\n          <button\r\n            onClick={handleSearch}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          onClick={scrollToMap}\r\n          className=\"mt-8 text-blue-600 underline\"\r\n        >\r\n          ↓ Scroll down to view map\r\n        </button>\r\n\r\n        {showModal && <AboutModal onClose={() => setShowModal(false)} />}\r\n      </div>\r\n\r\n      \r\n      <div ref={mapRef} className=\"h-screen flex items-center justify-center\">\r\n        <MapContainer\r\n          center={[20.5937, 78.9629]} // India center\r\n          zoom={6}\r\n          style={{ height: \"80vh\", width: \"90%\" }}\r\n        >\r\n          <LayersControl position=\"topright\">\r\n            \r\n            <LayersControl.BaseLayer checked name=\"Street Map\">\r\n              <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; OpenStreetMap contributors\"\r\n              />\r\n            </LayersControl.BaseLayer>\r\n\r\n           \r\n            <LayersControl.BaseLayer name=\"Satellite with Roads & Labels\">\r\n              <LayerGroup>\r\n               \r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                />\r\n           \r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={1}\r\n                />\r\n           \r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={2}\r\n                />\r\n              </LayerGroup>\r\n            </LayersControl.BaseLayer>\r\n          </LayersControl>\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n\r\n*/\n\n/*\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AboutModal from \"./AboutModel\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  LayersControl,\r\n  LayerGroup,\r\n} from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nfunction HomePage() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const mapRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSearch = () => {\r\n    if (search.trim()) navigate(`/map?query=${search}`);\r\n  };\r\n\r\n  const scrollToMap = () => {\r\n    if (mapRef.current) {\r\n      mapRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100\">\r\n     \r\n      <header className=\"bg-white shadow-md py-4 px-8 flex items-center justify-between fixed top-0 w-full z-50\">\r\n        \r\n        <div className=\"flex items-center space-x-3\">\r\n          <img src=\"/geojena.jpg\" alt=\"Logo\" className=\"h-10 w-auto object-contain\" />\r\n          <span className=\"text-xl font-bold text-gray-800\"></span>\r\n        </div>\r\n\r\n    \r\n        <nav className=\"flex space-x-6\">\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">Home</button>\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">Services</button>\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">About</button>\r\n        </nav>\r\n      </header>\r\n\r\n\r\n      <div className=\"h-screen flex flex-col items-center justify-center relative pt-28\">\r\n        <button\r\n          className=\"absolute top-4 right-4 px-4 py-2 bg-blue-600 text-white rounded\"\r\n          onClick={() => setShowModal(true)}\r\n        >\r\n          About Us\r\n        </button>\r\n\r\n        <img\r\n          src=\"/geojena.jpg\"\r\n          alt=\"GeoJena Logo\"\r\n          className=\"h-24 mb-6 object-contain\"\r\n        />\r\n\r\n        <div className=\"flex gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter District or State\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"px-4 py-2 border border-gray-300 rounded w-80\"\r\n          />\r\n          <button\r\n            onClick={handleSearch}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          onClick={scrollToMap}\r\n          className=\"mt-8 text-blue-600 underline\"\r\n        >\r\n          ↓ Scroll down to view map\r\n        </button>\r\n\r\n        {showModal && <AboutModal onClose={() => setShowModal(false)} />}\r\n      </div>\r\n\r\n    \r\n      <div ref={mapRef} className=\"h-screen flex items-center justify-center\">\r\n        <MapContainer\r\n          center={[20.5937, 78.9629]} // India center\r\n          zoom={6}\r\n          style={{ height: \"80vh\", width: \"90%\" }}\r\n        >\r\n          <LayersControl position=\"topright\">\r\n         \r\n            <LayersControl.BaseLayer checked name=\"Street Map\">\r\n              <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; OpenStreetMap contributors\"\r\n              />\r\n            </LayersControl.BaseLayer>\r\n\r\n        \r\n            <LayersControl.BaseLayer name=\"Satellite with Roads & Labels\">\r\n              <LayerGroup>\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                />\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={1}\r\n                />\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={2}\r\n                />\r\n              </LayerGroup>\r\n            </LayersControl.BaseLayer>\r\n          </LayersControl>\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n\r\n*/\n\nimport React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AboutModal from \"./AboutModel\";\nimport { MapContainer, TileLayer, LayersControl, LayerGroup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const mapRef = useRef(null);\n  const navigate = useNavigate();\n  const handleSearch = () => {\n    if (search.trim()) navigate(`/map?query=${search}`);\n  };\n  const scrollToMap = () => {\n    if (mapRef.current) {\n      mapRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-md py-4 px-8 flex items-center justify-between fixed top-0 w-full z-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/geojena.jpg\",\n          alt: \"Logo\",\n          className: \"h-10 w-auto object-contain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xl font-bold text-gray-800\",\n          children: \"GeoJena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"flex space-x-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-gray-700 hover:text-blue-600 font-medium\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-gray-700 hover:text-blue-600 font-medium\",\n          children: \"Services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-gray-700 hover:text-blue-600 font-medium\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen flex flex-col items-center justify-center relative pt-28\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"absolute top-4 right-4 px-4 py-2 bg-blue-600 text-white rounded\",\n        onClick: () => setShowModal(true),\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/geojena.jpg\",\n        alt: \"GeoJena Logo\",\n        className: \"h-24 mb-6 object-contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter District or State\",\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          className: \"px-4 py-2 border border-gray-300 rounded w-80\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          className: \"px-4 py-2 bg-green-600 text-white rounded\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: scrollToMap,\n        className: \"mt-8 text-blue-600 underline\",\n        children: \"\\u2193 Scroll down to view map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(AboutModal, {\n        onClose: () => setShowModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [20.5937, 78.9629] // India center\n        ,\n        zoom: 6,\n        style: {\n          height: \"80vh\",\n          width: \"90%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(LayersControl, {\n          position: \"topright\",\n          children: [/*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n            checked: true,\n            name: \"Street Map\",\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n              attribution: \"\\xA9 OpenStreetMap contributors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n            name: \"Satellite with Roads & Labels\",\n            children: /*#__PURE__*/_jsxDEV(LayerGroup, {\n              children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                url: \"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n                attribution: \"\\xA9 Esri\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n                url: \"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\",\n                attribution: \"\\xA9 Esri\",\n                zIndex: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n                url: \"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\",\n                attribution: \"\\xA9 Esri\",\n                zIndex: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"tMG7WUsShY0gc+XjcKIKJFhy5NU=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","AboutModal","MapContainer","TileLayer","LayersControl","LayerGroup","jsxDEV","_jsxDEV","HomePage","_s","search","setSearch","showModal","setShowModal","mapRef","navigate","handleSearch","trim","scrollToMap","current","scrollIntoView","behavior","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","onClose","ref","center","zoom","style","height","width","position","BaseLayer","checked","name","url","attribution","zIndex","_c","$RefreshReg$"],"sources":["D:/projectGeo/PropertyAssessmentTool/frontend/src/components/HomePage.js"],"sourcesContent":["/*import React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AboutModal from \"./AboutModel\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  LayersControl,\r\n  LayerGroup, // ✅ Import this!\r\n} from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nfunction HomePage() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const mapRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSearch = () => {\r\n    if (search.trim()) navigate(`/map?query=${search}`);\r\n  };\r\n\r\n  const scrollToMap = () => {\r\n    if (mapRef.current) {\r\n      mapRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100\">\r\n      \r\n      <div className=\"h-screen flex flex-col items-center justify-center relative\">\r\n        <button\r\n          className=\"absolute top-4 right-4 px-4 py-2 bg-blue-600 text-white rounded\"\r\n          onClick={() => setShowModal(true)}\r\n        >\r\n          About Us\r\n        </button>\r\n\r\n        <img\r\n          src=\"/geojena.jpg\"\r\n          alt=\"GeoJena Logo\"\r\n          className=\"h-24 mb-6 object-contain\"\r\n        />\r\n\r\n        <div className=\"flex gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter District or State\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"px-4 py-2 border border-gray-300 rounded w-80\"\r\n          />\r\n          <button\r\n            onClick={handleSearch}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          onClick={scrollToMap}\r\n          className=\"mt-8 text-blue-600 underline\"\r\n        >\r\n          ↓ Scroll down to view map\r\n        </button>\r\n\r\n        {showModal && <AboutModal onClose={() => setShowModal(false)} />}\r\n      </div>\r\n\r\n      \r\n      <div ref={mapRef} className=\"h-screen flex items-center justify-center\">\r\n        <MapContainer\r\n          center={[20.5937, 78.9629]} // India center\r\n          zoom={6}\r\n          style={{ height: \"80vh\", width: \"90%\" }}\r\n        >\r\n          <LayersControl position=\"topright\">\r\n            \r\n            <LayersControl.BaseLayer checked name=\"Street Map\">\r\n              <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; OpenStreetMap contributors\"\r\n              />\r\n            </LayersControl.BaseLayer>\r\n\r\n           \r\n            <LayersControl.BaseLayer name=\"Satellite with Roads & Labels\">\r\n              <LayerGroup>\r\n               \r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                />\r\n           \r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={1}\r\n                />\r\n           \r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={2}\r\n                />\r\n              </LayerGroup>\r\n            </LayersControl.BaseLayer>\r\n          </LayersControl>\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n/*\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AboutModal from \"./AboutModel\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  LayersControl,\r\n  LayerGroup,\r\n} from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nfunction HomePage() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const mapRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSearch = () => {\r\n    if (search.trim()) navigate(`/map?query=${search}`);\r\n  };\r\n\r\n  const scrollToMap = () => {\r\n    if (mapRef.current) {\r\n      mapRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100\">\r\n     \r\n      <header className=\"bg-white shadow-md py-4 px-8 flex items-center justify-between fixed top-0 w-full z-50\">\r\n        \r\n        <div className=\"flex items-center space-x-3\">\r\n          <img src=\"/geojena.jpg\" alt=\"Logo\" className=\"h-10 w-auto object-contain\" />\r\n          <span className=\"text-xl font-bold text-gray-800\"></span>\r\n        </div>\r\n\r\n    \r\n        <nav className=\"flex space-x-6\">\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">Home</button>\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">Services</button>\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">About</button>\r\n        </nav>\r\n      </header>\r\n\r\n\r\n      <div className=\"h-screen flex flex-col items-center justify-center relative pt-28\">\r\n        <button\r\n          className=\"absolute top-4 right-4 px-4 py-2 bg-blue-600 text-white rounded\"\r\n          onClick={() => setShowModal(true)}\r\n        >\r\n          About Us\r\n        </button>\r\n\r\n        <img\r\n          src=\"/geojena.jpg\"\r\n          alt=\"GeoJena Logo\"\r\n          className=\"h-24 mb-6 object-contain\"\r\n        />\r\n\r\n        <div className=\"flex gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter District or State\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"px-4 py-2 border border-gray-300 rounded w-80\"\r\n          />\r\n          <button\r\n            onClick={handleSearch}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          onClick={scrollToMap}\r\n          className=\"mt-8 text-blue-600 underline\"\r\n        >\r\n          ↓ Scroll down to view map\r\n        </button>\r\n\r\n        {showModal && <AboutModal onClose={() => setShowModal(false)} />}\r\n      </div>\r\n\r\n    \r\n      <div ref={mapRef} className=\"h-screen flex items-center justify-center\">\r\n        <MapContainer\r\n          center={[20.5937, 78.9629]} // India center\r\n          zoom={6}\r\n          style={{ height: \"80vh\", width: \"90%\" }}\r\n        >\r\n          <LayersControl position=\"topright\">\r\n         \r\n            <LayersControl.BaseLayer checked name=\"Street Map\">\r\n              <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; OpenStreetMap contributors\"\r\n              />\r\n            </LayersControl.BaseLayer>\r\n\r\n        \r\n            <LayersControl.BaseLayer name=\"Satellite with Roads & Labels\">\r\n              <LayerGroup>\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                />\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={1}\r\n                />\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={2}\r\n                />\r\n              </LayerGroup>\r\n            </LayersControl.BaseLayer>\r\n          </LayersControl>\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n\r\n*/\r\n\r\n\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AboutModal from \"./AboutModel\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  LayersControl,\r\n  LayerGroup,\r\n} from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nfunction HomePage() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const mapRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSearch = () => {\r\n    if (search.trim()) navigate(`/map?query=${search}`);\r\n  };\r\n\r\n  const scrollToMap = () => {\r\n    if (mapRef.current) {\r\n      mapRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100\">\r\n      {/* ✅ Navbar */}\r\n      <header className=\"bg-white shadow-md py-4 px-8 flex items-center justify-between fixed top-0 w-full z-50\">\r\n        {/* Logo on left */}\r\n        <div className=\"flex items-center space-x-3\">\r\n          <img src=\"/geojena.jpg\" alt=\"Logo\" className=\"h-10 w-auto object-contain\" />\r\n          <span className=\"text-xl font-bold text-gray-800\">GeoJena</span>\r\n        </div>\r\n\r\n        {/* Navigation buttons */}\r\n        <nav className=\"flex space-x-6\">\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">Home</button>\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">Services</button>\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">About</button>\r\n        </nav>\r\n      </header>\r\n\r\n      {/* Top Section (hero/search) */}\r\n      <div className=\"h-screen flex flex-col items-center justify-center relative pt-28\">\r\n        <button\r\n          className=\"absolute top-4 right-4 px-4 py-2 bg-blue-600 text-white rounded\"\r\n          onClick={() => setShowModal(true)}\r\n        >\r\n          About Us\r\n        </button>\r\n\r\n        <img\r\n          src=\"/geojena.jpg\"\r\n          alt=\"GeoJena Logo\"\r\n          className=\"h-24 mb-6 object-contain\"\r\n        />\r\n\r\n        <div className=\"flex gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter District or State\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"px-4 py-2 border border-gray-300 rounded w-80\"\r\n          />\r\n          <button\r\n            onClick={handleSearch}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          onClick={scrollToMap}\r\n          className=\"mt-8 text-blue-600 underline\"\r\n        >\r\n          ↓ Scroll down to view map\r\n        </button>\r\n\r\n        {showModal && <AboutModal onClose={() => setShowModal(false)} />}\r\n      </div>\r\n\r\n      {/* Map Section */}\r\n      <div ref={mapRef} className=\"h-screen flex items-center justify-center\">\r\n        <MapContainer\r\n          center={[20.5937, 78.9629]} // India center\r\n          zoom={6}\r\n          style={{ height: \"80vh\", width: \"90%\" }}\r\n        >\r\n          <LayersControl position=\"topright\">\r\n            {/* 1. Street Map */}\r\n            <LayersControl.BaseLayer checked name=\"Street Map\">\r\n              <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; OpenStreetMap contributors\"\r\n              />\r\n            </LayersControl.BaseLayer>\r\n\r\n            {/* 2. Satellite with Roads & Labels */}\r\n            <LayersControl.BaseLayer name=\"Satellite with Roads & Labels\">\r\n              <LayerGroup>\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                />\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={1}\r\n                />\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={2}\r\n                />\r\n              </LayerGroup>\r\n            </LayersControl.BaseLayer>\r\n          </LayersControl>\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n\r\n"],"mappingskBAAkB;AAC9C,OAAOC,UAAU,MAAM,cAAc;AACrC,SACEC,YAAY,EACZC,SAAS,EACTC,aAAa,EACbC,UAAU,QACL,eAAe;AACtB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMgB,MAAM,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIN,MAAM,CAACO,IAAI,CAAC,CAAC,EAAEF,QAAQ,CAAC,cAAcL,MAAM,EAAE,CAAC;EACrD,CAAC;EAED,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIJ,MAAM,CAACK,OAAO,EAAE;MAClBL,MAAM,CAACK,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IACvD;EACF,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAE1BhB,OAAA;MAAQe,SAAS,EAAC,wFAAwF;MAAAC,QAAA,gBAExGhB,OAAA;QAAKe,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBAC1ChB,OAAA;UAAKiB,GAAG,EAAC,cAAc;UAACC,GAAG,EAAC,MAAM;UAACH,SAAS,EAAC;QAA4B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5EtB,OAAA;UAAMe,SAAS,EAAC,iCAAiC;UAAAC,QAAA,EAAC;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eAGNtB,OAAA;QAAKe,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BhB,OAAA;UAAQe,SAAS,EAAC,+CAA+C;UAAAC,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/EtB,OAAA;UAAQe,SAAS,EAAC,+CAA+C;UAAAC,QAAA,EAAC;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnFtB,OAAA;UAAQe,SAAS,EAAC,+CAA+C;UAAAC,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAGTtB,OAAA;MAAKe,SAAS,EAAC,mEAAmE;MAAAC,QAAA,gBAChFhB,OAAA;QACEe,SAAS,EAAC,iEAAiE;QAC3EQ,OAAO,EAAEA,CAAA,KAAMjB,YAAY,CAAC,IAAI,CAAE;QAAAU,QAAA,EACnC;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETtB,OAAA;QACEiB,GAAG,EAAC,cAAc;QAClBC,GAAG,EAAC,cAAc;QAClBH,SAAS,EAAC;MAA0B;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eAEFtB,OAAA;QAAKe,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBhB,OAAA;UACEwB,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,yBAAyB;UACrCC,KAAK,EAAEvB,MAAO;UACdwB,QAAQ,EAAGC,CAAC,IAAKxB,SAAS,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC3CX,SAAS,EAAC;QAA+C;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC,eACFtB,OAAA;UACEuB,OAAO,EAAEd,YAAa;UACtBM,SAAS,EAAC,2CAA2C;UAAAC,QAAA,EACtD;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENtB,OAAA;QACEuB,OAAO,EAAEZ,WAAY;QACrBI,SAAS,EAAC,8BAA8B;QAAAC,QAAA,EACzC;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERjB,SAAS,iBAAIL,OAAA,CAACN,UAAU;QAACoC,OAAO,EAAEA,CAAA,KAAMxB,YAAY,CAAC,KAAK;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eAGNtB,OAAA;MAAK+B,GAAG,EAAExB,MAAO;MAACQ,SAAS,EAAC,2CAA2C;MAAAC,QAAA,eACrEhB,OAAA,CAACL,YAAY;QACXqC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,CAAE,CAAC;QAAA;QAC5BC,IAAI,EAAE,CAAE;QACRC,KAAK,EAAE;UAAEC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAApB,QAAA,eAExChB,OAAA,CAACH,aAAa;UAACwC,QAAQ,EAAC,UAAU;UAAArB,QAAA,gBAEhChB,OAAA,CAACH,aAAa,CAACyC,SAAS;YAACC,OAAO;YAACC,IAAI,EAAC,YAAY;YAAAxB,QAAA,eAChDhB,OAAA,CAACJ,SAAS;cACR6C,GAAG,EAAC,oDAAoD;cACxDC,WAAW,EAAC;YAAmC;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACqB,CAAC,eAG1BtB,OAAA,CAACH,aAAa,CAACyC,SAAS;YAACE,IAAI,EAAC,+BAA+B;YAAAxB,QAAA,eAC3DhB,OAAA,CAACF,UAAU;cAAAkB,QAAA,gBACThB,OAAA,CAACJ,SAAS;gBACR6C,GAAG,EAAC,iGAAiG;gBACrGC,WAAW,EAAC;cAAa;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CAAC,eACFtB,OAAA,CAACJ,SAAS;gBACR6C,GAAG,EAAC,kHAAkH;gBACtHC,WAAW,EAAC,WAAa;gBACzBC,MAAM,EAAE;cAAE;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC,eACFtB,OAAA,CAACJ,SAAS;gBACR6C,GAAG,EAAC,yHAAyH;gBAC7HC,WAAW,EAAC,WAAa;gBACzBC,MAAM,EAAE;cAAE;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACU,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAnHQD,QAAQ;EAAA,QAIER,WAAW;AAAA;AAAAmD,EAAA,GAJrB3C,QAAQ;AAqHjB,eAAeA,QAAQ;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}