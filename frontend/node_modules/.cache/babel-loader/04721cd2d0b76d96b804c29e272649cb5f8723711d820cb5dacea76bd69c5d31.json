{"ast":null,"code":"/*import React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AboutModal from \"./AboutModel\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  LayersControl,\r\n  LayerGroup, // ✅ Import this!\r\n} from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nfunction HomePage() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const mapRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSearch = () => {\r\n    if (search.trim()) navigate(`/map?query=${search}`);\r\n  };\r\n\r\n  const scrollToMap = () => {\r\n    if (mapRef.current) {\r\n      mapRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100\">\r\n      \r\n      <div className=\"h-screen flex flex-col items-center justify-center relative\">\r\n        <button\r\n          className=\"absolute top-4 right-4 px-4 py-2 bg-blue-600 text-white rounded\"\r\n          onClick={() => setShowModal(true)}\r\n        >\r\n          About Us\r\n        </button>\r\n\r\n        <img\r\n          src=\"/geojena.jpg\"\r\n          alt=\"GeoJena Logo\"\r\n          className=\"h-24 mb-6 object-contain\"\r\n        />\r\n\r\n        <div className=\"flex gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter District or State\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"px-4 py-2 border border-gray-300 rounded w-80\"\r\n          />\r\n          <button\r\n            onClick={handleSearch}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          onClick={scrollToMap}\r\n          className=\"mt-8 text-blue-600 underline\"\r\n        >\r\n          ↓ Scroll down to view map\r\n        </button>\r\n\r\n        {showModal && <AboutModal onClose={() => setShowModal(false)} />}\r\n      </div>\r\n\r\n      \r\n      <div ref={mapRef} className=\"h-screen flex items-center justify-center\">\r\n        <MapContainer\r\n          center={[20.5937, 78.9629]} // India center\r\n          zoom={6}\r\n          style={{ height: \"80vh\", width: \"90%\" }}\r\n        >\r\n          <LayersControl position=\"topright\">\r\n            \r\n            <LayersControl.BaseLayer checked name=\"Street Map\">\r\n              <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; OpenStreetMap contributors\"\r\n              />\r\n            </LayersControl.BaseLayer>\r\n\r\n           \r\n            <LayersControl.BaseLayer name=\"Satellite with Roads & Labels\">\r\n              <LayerGroup>\r\n               \r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                />\r\n           \r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={1}\r\n                />\r\n           \r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={2}\r\n                />\r\n              </LayerGroup>\r\n            </LayersControl.BaseLayer>\r\n          </LayersControl>\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n\r\n*/\n\n/*\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AboutModal from \"./AboutModel\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  LayersControl,\r\n  LayerGroup,\r\n} from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nfunction HomePage() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const mapRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSearch = () => {\r\n    if (search.trim()) navigate(`/map?query=${search}`);\r\n  };\r\n\r\n  const scrollToMap = () => {\r\n    if (mapRef.current) {\r\n      mapRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100\">\r\n     \r\n      <header className=\"bg-white shadow-md py-4 px-8 flex items-center justify-between fixed top-0 w-full z-50\">\r\n        \r\n        <div className=\"flex items-center space-x-3\">\r\n          <img src=\"/geojena.jpg\" alt=\"Logo\" className=\"h-10 w-auto object-contain\" />\r\n          <span className=\"text-xl font-bold text-gray-800\"></span>\r\n        </div>\r\n\r\n    \r\n        <nav className=\"flex space-x-6\">\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">Home</button>\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">Services</button>\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">About</button>\r\n        </nav>\r\n      </header>\r\n\r\n\r\n      <div className=\"h-screen flex flex-col items-center justify-center relative pt-28\">\r\n        <button\r\n          className=\"absolute top-4 right-4 px-4 py-2 bg-blue-600 text-white rounded\"\r\n          onClick={() => setShowModal(true)}\r\n        >\r\n          About Us\r\n        </button>\r\n\r\n        <img\r\n          src=\"/geojena.jpg\"\r\n          alt=\"GeoJena Logo\"\r\n          className=\"h-24 mb-6 object-contain\"\r\n        />\r\n\r\n        <div className=\"flex gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter District or State\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"px-4 py-2 border border-gray-300 rounded w-80\"\r\n          />\r\n          <button\r\n            onClick={handleSearch}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          onClick={scrollToMap}\r\n          className=\"mt-8 text-blue-600 underline\"\r\n        >\r\n          ↓ Scroll down to view map\r\n        </button>\r\n\r\n        {showModal && <AboutModal onClose={() => setShowModal(false)} />}\r\n      </div>\r\n\r\n    \r\n      <div ref={mapRef} className=\"h-screen flex items-center justify-center\">\r\n        <MapContainer\r\n          center={[20.5937, 78.9629]} // India center\r\n          zoom={6}\r\n          style={{ height: \"80vh\", width: \"90%\" }}\r\n        >\r\n          <LayersControl position=\"topright\">\r\n         \r\n            <LayersControl.BaseLayer checked name=\"Street Map\">\r\n              <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; OpenStreetMap contributors\"\r\n              />\r\n            </LayersControl.BaseLayer>\r\n\r\n        \r\n            <LayersControl.BaseLayer name=\"Satellite with Roads & Labels\">\r\n              <LayerGroup>\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                />\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={1}\r\n                />\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={2}\r\n                />\r\n              </LayerGroup>\r\n            </LayersControl.BaseLayer>\r\n          </LayersControl>\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n\r\n*/","map":{"version":3,"names":[],"sources":["D:/projectGeo/PropertyAssessmentTool/frontend/src/components/HomePage.js"],"sourcesContent":["/*import React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AboutModal from \"./AboutModel\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  LayersControl,\r\n  LayerGroup, // ✅ Import this!\r\n} from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nfunction HomePage() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const mapRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSearch = () => {\r\n    if (search.trim()) navigate(`/map?query=${search}`);\r\n  };\r\n\r\n  const scrollToMap = () => {\r\n    if (mapRef.current) {\r\n      mapRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100\">\r\n      \r\n      <div className=\"h-screen flex flex-col items-center justify-center relative\">\r\n        <button\r\n          className=\"absolute top-4 right-4 px-4 py-2 bg-blue-600 text-white rounded\"\r\n          onClick={() => setShowModal(true)}\r\n        >\r\n          About Us\r\n        </button>\r\n\r\n        <img\r\n          src=\"/geojena.jpg\"\r\n          alt=\"GeoJena Logo\"\r\n          className=\"h-24 mb-6 object-contain\"\r\n        />\r\n\r\n        <div className=\"flex gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter District or State\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"px-4 py-2 border border-gray-300 rounded w-80\"\r\n          />\r\n          <button\r\n            onClick={handleSearch}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          onClick={scrollToMap}\r\n          className=\"mt-8 text-blue-600 underline\"\r\n        >\r\n          ↓ Scroll down to view map\r\n        </button>\r\n\r\n        {showModal && <AboutModal onClose={() => setShowModal(false)} />}\r\n      </div>\r\n\r\n      \r\n      <div ref={mapRef} className=\"h-screen flex items-center justify-center\">\r\n        <MapContainer\r\n          center={[20.5937, 78.9629]} // India center\r\n          zoom={6}\r\n          style={{ height: \"80vh\", width: \"90%\" }}\r\n        >\r\n          <LayersControl position=\"topright\">\r\n            \r\n            <LayersControl.BaseLayer checked name=\"Street Map\">\r\n              <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; OpenStreetMap contributors\"\r\n              />\r\n            </LayersControl.BaseLayer>\r\n\r\n           \r\n            <LayersControl.BaseLayer name=\"Satellite with Roads & Labels\">\r\n              <LayerGroup>\r\n               \r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                />\r\n           \r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={1}\r\n                />\r\n           \r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={2}\r\n                />\r\n              </LayerGroup>\r\n            </LayersControl.BaseLayer>\r\n          </LayersControl>\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n/*\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AboutModal from \"./AboutModel\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  LayersControl,\r\n  LayerGroup,\r\n} from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nfunction HomePage() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const mapRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSearch = () => {\r\n    if (search.trim()) navigate(`/map?query=${search}`);\r\n  };\r\n\r\n  const scrollToMap = () => {\r\n    if (mapRef.current) {\r\n      mapRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100\">\r\n     \r\n      <header className=\"bg-white shadow-md py-4 px-8 flex items-center justify-between fixed top-0 w-full z-50\">\r\n        \r\n        <div className=\"flex items-center space-x-3\">\r\n          <img src=\"/geojena.jpg\" alt=\"Logo\" className=\"h-10 w-auto object-contain\" />\r\n          <span className=\"text-xl font-bold text-gray-800\"></span>\r\n        </div>\r\n\r\n    \r\n        <nav className=\"flex space-x-6\">\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">Home</button>\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">Services</button>\r\n          <button className=\"text-gray-700 hover:text-blue-600 font-medium\">About</button>\r\n        </nav>\r\n      </header>\r\n\r\n\r\n      <div className=\"h-screen flex flex-col items-center justify-center relative pt-28\">\r\n        <button\r\n          className=\"absolute top-4 right-4 px-4 py-2 bg-blue-600 text-white rounded\"\r\n          onClick={() => setShowModal(true)}\r\n        >\r\n          About Us\r\n        </button>\r\n\r\n        <img\r\n          src=\"/geojena.jpg\"\r\n          alt=\"GeoJena Logo\"\r\n          className=\"h-24 mb-6 object-contain\"\r\n        />\r\n\r\n        <div className=\"flex gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter District or State\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"px-4 py-2 border border-gray-300 rounded w-80\"\r\n          />\r\n          <button\r\n            onClick={handleSearch}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          onClick={scrollToMap}\r\n          className=\"mt-8 text-blue-600 underline\"\r\n        >\r\n          ↓ Scroll down to view map\r\n        </button>\r\n\r\n        {showModal && <AboutModal onClose={() => setShowModal(false)} />}\r\n      </div>\r\n\r\n    \r\n      <div ref={mapRef} className=\"h-screen flex items-center justify-center\">\r\n        <MapContainer\r\n          center={[20.5937, 78.9629]} // India center\r\n          zoom={6}\r\n          style={{ height: \"80vh\", width: \"90%\" }}\r\n        >\r\n          <LayersControl position=\"topright\">\r\n         \r\n            <LayersControl.BaseLayer checked name=\"Street Map\">\r\n              <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution=\"&copy; OpenStreetMap contributors\"\r\n              />\r\n            </LayersControl.BaseLayer>\r\n\r\n        \r\n            <LayersControl.BaseLayer name=\"Satellite with Roads & Labels\">\r\n              <LayerGroup>\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                />\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Transportation/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={1}\r\n                />\r\n                <TileLayer\r\n                  url=\"https://services.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\"\r\n                  attribution=\"&copy; Esri\"\r\n                  zIndex={2}\r\n                />\r\n              </LayerGroup>\r\n            </LayersControl.BaseLayer>\r\n          </LayersControl>\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n\r\n*/\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}